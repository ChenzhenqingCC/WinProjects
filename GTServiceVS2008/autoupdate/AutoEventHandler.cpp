////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//	autoupdate_event   version:  1.0   ? date: 10/10/2009
//  -------------------------------------------------------------
//  
//  -------------------------------------------------------------
//	Copyright (C) 2009 ztgame Corporation- All Rights Reserved
//	Written By Jack Liu
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include "stdafx.h"
#include "utility/utility.h"
#include "AutoEventHandler.h"
#include "MainDlg.h"

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
AutoEventHostHandler::AutoEventHostHandler(const HWND wnd):m_targwnd(wnd)
{

}
AutoEventHostHandler:: ~AutoEventHostHandler()
{

}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
int AutoEventHostHandler::Handler(const Event &pe)
{
	COPYDATASTRUCT cds;
	memset(&cds,0,sizeof(cds));
	cds.dwData = pe.type;
	cds.cbData = pe.dwData;
	cds.lpData = (LPVOID)pe.tar_obj;
	return SendMessage(m_targwnd,WM_COPYDATA,0,(LPARAM)&cds);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
AutoEventUIHandler::AutoEventUIHandler(CMainDlg *pwnd):m_pmdlg(pwnd)
{

}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
AutoEventUIHandler::~AutoEventUIHandler()
{

}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
int AutoEventUIHandler::Handler(const Event &pe)
{
	return m_pmdlg->UIEventHandler(pe);
}